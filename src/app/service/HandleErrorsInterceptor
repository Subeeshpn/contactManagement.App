

import { Injectable } from '@angular/core';
import {
  HttpRequest,
  HttpHandler,
  HttpEvent,
  HttpInterceptor,
  HttpErrorResponse,HttpClientModule
} from '@angular/common/http';
import { Observable, catchError, throwError } from 'rxjs';
import * as alertify from 'alertifyjs';


@Injectable({
 providedIn:'root'
}
)

export class HandleErrorsInterceptor implements HttpInterceptor {

    constructor(private alertify:alertify) { }
  
    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {
     
      console.log('Http request started');
      return next.handle(req)
      .pipe(
        catchError((error : HttpErrorResponse)=>{
          const errorMessage=this.setError(error);
          console.log(error);
          alertify.error(error.error);
          return  throwError(() => errorMessage);
        })
      );
    }
    setError(error : HttpErrorResponse):string {
      let errorMessage ="Unknown error occured";
      if(error.error instanceof ErrorEvent){
        errorMessage=error.error.message;
      }
      else {
        if(error.status!=0){
          errorMessage = error.error.errorMessage;
        }
      }
      return errorMessage
    }
  }